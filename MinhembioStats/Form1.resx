<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAQAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAVLFAAlM1QAGVN8ABFbeAAlU3QANVdwAC1ncAA9Z3QASZc4AF2zNAB5j0wAfZNsAFG/ZAAF2
        3QACeN4AE3rWAB182wAjZdQAIGLaAC1m3QAvetYAK3faAD962wACVuAAAFrpAAdZ6gAVX+IADGnlAABh
        7QAFbukAAG7uABxm4wAAe+EAAHzhAAB+4QAJZvAAAm3zABJu8QAAcfYACXHyAA949wAJffYAAH36AChy
        4AAke+AALn7sAEJ33QBHfd0ADYDTAA+P3gAZk90AJYLZACKB3gArh9sAL4vaADWT1gAHgOcAC4PiAAyD
        4AAGiuEADIjlAACB6gATj+8ABpTnAAmS5wAMmOQABp3vAAue7QAQmuUAAoT+AACG/wAaiPoAHY77AACV
        /wAElf8ACZP5AAid+wASkvsAEpz/ABWd/wAbm/4AJYrgACSJ5QApgugAIZP/AA6h6wAWqOoAD6D+ABmm
        9QAZofsAD7D5AC+5/wBKjNkAX43bAFea3gBlkN0AVpLiAGae5ABlnuwAQ7r/AGmh7wB3p+kAfq7rAD7D
        /wA5yP0AOcz/ADjQ/wA90v8AQdT/AFrk/wD3+PkAZmnxAFgOAQAg8xIAnAnUAFlc8QAMAAAAHPESALzw
        EgCY1dMAJAsFAFIAAAADSMcALRoBAAeW8QAQ1aQAHPMSAPjyEgAE8RIArNXTAFnV0wBs8RIAvFlAAAAA
        AAAAAAAAvFlAAAAAAADU8BIAgQAgAIjxEgAs8RIAAAAUAFIAAAAAAAAALRoBAAeW8QB81qQAcPMSAEzz
        EgBI8xIAGO6QADgHkQD///8AMgeRAKsGkQDrBpEAAAAAAHz2EgBU9hIAWPYSACqI0wAgAAAAvFlAAIBe
        ogAUAAAAAQAAAAAAAAAAAAAAEAAAAAAAAACI8RIAPuvTAPjdbgAAAAAARPUSAET1EgAs9RIAiW8QAGRs
        8QBRbfEAjREBAA8AhQAAAAAAjREBAAAAAAABAAAAAAAAAMTxEgC4bPEAjREBAAAAAQB81qQAwU1BAI0R
        AQAAAwAAfPUSAAAAAAAAAAwAfPUSAAEAAAAkCwUATepBALxZQAAkCwUAIAAAADYLAQABAAAAsPISADDz
        EgC48hIAgF6iANOQQgC48hIAgF6iAJTyQQD/6ZAADhCBAHwAAAAAAAAAAAAAAAAAAABk8hIAAADQAAAD
        AAAAAAAALhCBAAADAAAAANAAfAAAABAAAAAQAAAARQmRAE4JkQDY9RIAJAACAMTzEgAFAAAAkEGRAABA
        /QACAAAAnPISAPqtkQCQAgIAAAAAAHAJkQDA5JcAbz6RAGI+kQAIAgAAfPYSAFT2EgA8AAAAIPcSAFnm
        QABh5kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGAAAAAAAAAAYRdnAAAAESsnGAAA
        AAAAACFGGTAAAD5SOEoFADQdEwA5PyEeDgAAAGYzRhRSayYTACkSOltVAAAAYkQkCmloGgpYGwAQEAAA
        AAA3SntZOk8CMiguAAAAAAAAZUEePRwxTwFMBwAAAAAAAAA2TTkpC0VODyUsAAAAAAAAY0FcSSBURFpR
        BQAAAAAAAAA0a2QHAC1WbkgvAAAAAAAAZkJpAwAAFVdtGAAAAAAAAABfIRYAAABdPA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//RgD//wAAn8cAAA/DAAAEQQAAwCAAAOAEAADwAwAA8ANgAPgB
        AAD4AWEX/CAAAPwwJxj+OAAA//8hRv//AAA=
</value>
  </data>
</root>